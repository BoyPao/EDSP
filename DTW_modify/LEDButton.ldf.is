#line 1 ".\LEDButton.ldf"
                                                                  
                                                                  
                                                                  
                                                                  
                                                                  

  
                                                                            
  
                                                                    
  
                                                                       
                                                                        
                                                                  
  
                  
                                                                     
                                                         
                                                                
                                                        
                                                  
                                                   
                                                    
                                                    
                                                    
                                                   
                                                    
                                                   
                                                                                                        
                                                   
                                                    
                                                    
                                                    
                                                    
                                                   
                                                    
                                                 
                                                 
                                                 
                                                 
                                                   
                                                   
                                                      
                                                
                                                         
  
  

ARCHITECTURE(ADSP-BF561)

SEARCH_DIR($ADI_DSP/Blackfin/lib)


                                                    
                                        
                                           
                                           
                                              
                                 
                                      



















                                                                                                                                                                                                                                                                                                                                                                                                                                                   
$LIBS = 

                                                                  
                                                                  
                                                                  

    /**63,12,.\LEDButton.ldf**/libmc561y.dlb ,libsmall561y.dlb ,libio561y.dlb ,libc561y.dlb ,libevent561y.dlb ,libx561y.dlb ,libcpp561y.dlb ,libcpprt561y.dlb ,libf64ieee561y.dlb ,libdsp561y.dlb ,libsftflt561y.dlb ,libetsi561y.dlb ,libssl561y.dlb ,libdrv561y.dlb ,libusb561y.dlb ,librt_fileio561y.dlb /**87,7,.\LEDButton.ldf**/

                                                                  
                                                                  
                                                                  

   ;

$LIBRARIES_CORE_A = 

                                                                  
                                                                  
                                                                  

    /**57,22,.\LEDButton.ldf**/libio561y.dlb /**101,24,.\LEDButton.ldf**/
   ,corea.dlb
   ,$LIBS {(!DualCoreMem("CoreB")) && (!sharing("MustShare"))}

                                                                  
                                                                  
                                                                  

   ;

$LIBRARIES_CORE_B = 

                                                                  
                                                                  
                                                                  

    /**57,22,.\LEDButton.ldf**/libio561y.dlb /**117,24,.\LEDButton.ldf**/
   ,coreb.dlb
   ,$LIBS {(!DualCoreMem("CoreA")) && (!sharing("MustShare"))}

                                                                  
                                                                  
                                                                  

   ;

$LIBRARIES_SML2 = 

                                                                  
                                                                  
                                                                  

   sml2.dlb
   ,$LIBS

                                                                  
                                                                  
                                                                  

   ;

$LIBRARIES_SML3 = 

                                                                  
                                                                  
                                                                  

   sml3.dlb
   ,$LIBS

                                                                  
                                                                  
                                                                  

   ;

$LIBRARIES_SML2_CM = 
   $LIBRARIES_SML2

                                                                  
                                                                  
                                                                  

   ;

$LIBRARIES_SML3_CM = 
   $LIBRARIES_SML3

                                                                  
                                                                  
                                                                  

   ;

$LIBRARIES_SHARED = 
   $LIBS

                                                                  
                                                                  
                                                                  

   ;

$OBJECTS_CORE_A = 

                                                                  
                                                                  
                                                                  

   "LEDButton_basiccrt.doj"
   ,  /**55,19,.\LEDButton.ldf**/libprofile561y.dlb /**191,28,.\LEDButton.ldf**/
   , $COMMAND_LINE_OBJECTS {!DualCoreMem("CoreB")}
   , "cplbtab561a.doj"
   ,  /**59,19,.\LEDButton.ldf**/crtn561y.doj /**194,25,.\LEDButton.ldf**/

                                                                  
                                                                  
                                                                  

   ;

$OBJS_LIBS_INTERNAL_CORE_A = 

                                                                  
                                                                  
                                                                  

   $OBJECTS_CORE_A{prefersMem("internal")}, $LIBRARIES_CORE_A{prefersMem("internal")}

                                                                  
                                                                  
                                                                  

   ;

$OBJS_LIBS_NOT_EXTERNAL_CORE_A = 

                                                                  
                                                                  
                                                                  

   $OBJECTS_CORE_A{!prefersMem("external")}, $LIBRARIES_CORE_A{!prefersMem("external")}

                                                                  
                                                                  
                                                                  

   ;

$OBJECTS_CORE_B = 

                                                                  
                                                                  
                                                                  

   "LEDButton_basiccrt.doj"
   ,  /**55,19,.\LEDButton.ldf**/libprofile561y.dlb /**237,28,.\LEDButton.ldf**/
   , $COMMAND_LINE_OBJECTS {!DualCoreMem("CoreA")}
   , "cplbtab561b.doj"
   ,  /**59,19,.\LEDButton.ldf**/crtn561y.doj /**240,25,.\LEDButton.ldf**/

                                                                  
                                                                  
                                                                  

   ;

$OBJS_LIBS_INTERNAL_CORE_B = 

                                                                  
                                                                  
                                                                  

   $OBJECTS_CORE_B{prefersMem("internal")}, $LIBRARIES_CORE_B{prefersMem("internal")}

                                                                  
                                                                  
                                                                  

   ;

$OBJS_LIBS_NOT_EXTERNAL_CORE_B = 

                                                                  
                                                                  
                                                                  

   $OBJECTS_CORE_B{!prefersMem("external")}, $LIBRARIES_CORE_B{!prefersMem("external")}

                                                                  
                                                                  
                                                                  

   ;

$OBJECTS = $COMMAND_LINE_OBJECTS;

                                                                  
                                                                  
                                                                  


                                                                  
                                                                  

                                                                 
                   

                          
                          
                          
                          


                                                                  


MEMORY
{
    
                           
    
                                            
    
                                                               
                                                        
            
                                      
                                               
                                      
                                                    
                                      
                                             
                                      
                                                            
                                                    
                                                            
                                                    
                                      
            
                                      
                                               
                                      
                                                     
                                      
                                             
                                      
                                                            
                                                    
                                                            
                                                    
                   
                                      
                                            
                                      
                                      
                                      
                                                        
                                                       
                                                       
                                                       
                                                    
     
           
                                                                         
    
    
  
   MEM_L2_SRAM_NOT_CACHED  { TYPE(RAM) START(0xFEB10000) END(0xFEB1FFFF) WIDTH(8) }
   MEM_L2_SRAM             { TYPE(RAM) START(0xFEB00000) END(0xFEB0FFFF) WIDTH(8) }
   MEM_ASYNC3              { TYPE( /**292,22,.\LEDButton.ldf**/RAM /**351,48,.\LEDButton.ldf**/) START(0x2C000000) END(0x2FFFFFFF) WIDTH(8) }
   MEM_ASYNC2              { TYPE( /**291,22,.\LEDButton.ldf**/RAM /**352,48,.\LEDButton.ldf**/) START(0x28000000) END(0x2BFFFFFF) WIDTH(8) }
   MEM_ASYNC1              { TYPE( /**290,22,.\LEDButton.ldf**/RAM /**353,48,.\LEDButton.ldf**/) START(0x24000000) END(0x27FFFFFF) WIDTH(8) }
   MEM_ASYNC0              { TYPE( /**289,22,.\LEDButton.ldf**/RAM /**354,48,.\LEDButton.ldf**/) START(0x20000000) END(0x23FFFFFF) WIDTH(8) }
                      
   MEM_SDRAM_BANK0         { TYPE(RAM) START(0x00000004) END(0x00ffffff) WIDTH(8) } 
   MEM_SDRAM_BANK1         { TYPE(RAM) START(0x01000000) END(0x01ffffff) WIDTH(8) } 
   MEM_SDRAM_BANK2         { TYPE(RAM) START(0x02000000) END(0x02ffffff) WIDTH(8) } 
   MEM_SDRAM_BANK3         { TYPE(RAM) START(0x03000000) END(0x03ffffff) WIDTH(8) } 
   
                                                                  
                                                                     
                                                                  
   
}             

COMMON_MEMORY
{
   OUTPUT($COMMAND_LINE_OUTPUT_DIRECTORY/L2_and_L3_common_memory.sm)
   MASTERS(p0, p1)
   
                                                                  
                                                                     
                                                                  
   
   SECTIONS
   {
      
                                                                     
                                                                        
                                                                     
      
      L2_shared_locks
      {
                                                                          
         INPUT_SECTION_ALIGN(4)
         INPUT_SECTIONS($LIBRARIES_SHARED(primio_atomic_lock))
         INPUT_SECTIONS($LIBRARIES_SHARED(mc_data))
      } > MEM_L2_SRAM_NOT_CACHED
      
      L2_shared
      {
                                                                     
         INPUT_SECTION_ALIGN(4)
         INPUT_SECTIONS($LIBRARIES_SML2_CM{sharing("MustShare")}(data1))
         INPUT_SECTIONS($LIBRARIES_SML2_CM(l2_shared))
         INPUT_SECTIONS($LIBRARIES_SML2_CM(voldata))
      } > MEM_L2_SRAM_NOT_CACHED
      
      L2_sram
      {
         INPUT_SECTION_ALIGN(4)
         INPUT_SECTIONS($LIBRARIES_SML2_CM(L2_sram))
         INPUT_SECTIONS($LIBRARIES_SML2_CM(l2_sram))
         INPUT_SECTIONS($LIBRARIES_SML2_CM{prefersMem("internal")}(program))
         INPUT_SECTIONS($LIBRARIES_SML2_CM{prefersMem("internal")}(data1))
         INPUT_SECTIONS($LIBRARIES_SML2_CM{!prefersMem("external")}(program))
         INPUT_SECTIONS($LIBRARIES_SML2_CM{!prefersMem("external")}(data1))
         INPUT_SECTIONS($LIBRARIES_SML2_CM(constdata))
         INPUT_SECTIONS($LIBRARIES_SML2_CM(voldata))
         INPUT_SECTIONS($LIBRARIES_SML2_CM(noncache_code))
         INPUT_SECTIONS($LIBRARIES_SML2_CM(program))
         INPUT_SECTIONS($LIBRARIES_SML2_CM(data1))
         
                                                                    
                                                                           
                                                                    
         
      } > MEM_L2_SRAM
      
      L2_bsz ZERO_INIT
      {
         INPUT_SECTION_ALIGN(4)
         INPUT_SECTIONS($LIBRARIES_SML2_CM(L2_bsz))
         INPUT_SECTIONS($LIBRARIES_SML2_CM{prefersMem("internal")}(bsz))
         INPUT_SECTIONS($LIBRARIES_SML2_CM{!prefersMem("external")}(bsz))
         INPUT_SECTIONS($LIBRARIES_SML2_CM(bsz))
      } > MEM_L2_SRAM
      
      L2_sram_not_cached
      {
         INPUT_SECTION_ALIGN(4)
         INPUT_SECTIONS($LIBRARIES_SML2_CM(L2_sram))
         INPUT_SECTIONS($LIBRARIES_SML2_CM(l2_sram))
         INPUT_SECTIONS($LIBRARIES_SML2_CM{prefersMem("internal")}(program))
         INPUT_SECTIONS($LIBRARIES_SML2_CM{prefersMem("internal")}(data1))
         INPUT_SECTIONS($LIBRARIES_SML2_CM{!prefersMem("external")}(program))
         INPUT_SECTIONS($LIBRARIES_SML2_CM{!prefersMem("external")}(data1))
         INPUT_SECTIONS($LIBRARIES_SML2_CM(constdata))
         INPUT_SECTIONS($LIBRARIES_SML2_CM(voldata))
         INPUT_SECTIONS($LIBRARIES_SML2_CM(noncache_code))
         INPUT_SECTIONS($LIBRARIES_SML2_CM(program))
         INPUT_SECTIONS($LIBRARIES_SML2_CM(data1))
         
                                                                               
                                                                           
                                                                               
         
      } > MEM_L2_SRAM_NOT_CACHED
      
      L2_bsz_not_cached ZERO_INIT
      {
         INPUT_SECTION_ALIGN(4)
         INPUT_SECTIONS($LIBRARIES_SML2_CM(L2_bsz))
         INPUT_SECTIONS($LIBRARIES_SML2_CM{prefersMem("internal")}(bsz))
         INPUT_SECTIONS($LIBRARIES_SML2_CM{!prefersMem("external")}(bsz))
         INPUT_SECTIONS($LIBRARIES_SML2_CM(bsz))
      } > MEM_L2_SRAM_NOT_CACHED
      
      L2_eh_rtti
      {
         INPUT_SECTION_ALIGN(4)
         FORCE_CONTIGUITY
         INPUT_SECTIONS($LIBRARIES_SML2_CM(vtbl)  $LIBRARIES_SML3_CM(vtbl))
         INPUT_SECTIONS($LIBRARIES_SML2_CM(.frt)  $LIBRARIES_SML3_CM(.frt))
         INPUT_SECTIONS($LIBRARIES_SML2_CM(.edt)  $LIBRARIES_SML3_CM(.edt))
         INPUT_SECTIONS($LIBRARIES_SML2_CM(.cht)  $LIBRARIES_SML3_CM(.cht))
         INPUT_SECTIONS($LIBRARIES_SML2_CM(.rtti) $LIBRARIES_SML3_CM(.rtti))
         
                                                                       
                                                                           
                                                                       
         
      } > MEM_L2_SRAM
      
      L2_eh_rtti_not_cached
      {
         INPUT_SECTION_ALIGN(4)
         FORCE_CONTIGUITY
         INPUT_SECTIONS($LIBRARIES_SML2_CM(vtbl)  $LIBRARIES_SML3_CM(vtbl))
         INPUT_SECTIONS($LIBRARIES_SML2_CM(.frt)  $LIBRARIES_SML3_CM(.frt))
         INPUT_SECTIONS($LIBRARIES_SML2_CM(.edt)  $LIBRARIES_SML3_CM(.edt))
         INPUT_SECTIONS($LIBRARIES_SML2_CM(.cht)  $LIBRARIES_SML3_CM(.cht))
         INPUT_SECTIONS($LIBRARIES_SML2_CM(.rtti) $LIBRARIES_SML3_CM(.rtti))
         
                                                                                 
                                                                           
                                                                                 
         
      } > MEM_L2_SRAM_NOT_CACHED
      
      sdram_bank0
      {
         INPUT_SECTION_ALIGN(4)
         
                                                                          
                                                                           
                                                                          
         
         INPUT_SECTIONS($LIBRARIES_SML3_CM(sdram_data_bank0))
         INPUT_SECTIONS($LIBRARIES_SML3_CM(sdram_bank0))
         INPUT_SECTIONS($LIBRARIES_SML3_CM(data1))
         INPUT_SECTIONS($LIBRARIES_SML3_CM(voldata))
         INPUT_SECTIONS($LIBRARIES_SML3_CM(constdata))
      } > MEM_SDRAM_BANK0
      
      sdram_bank0_bsz ZERO_INIT
      {
         INPUT_SECTION_ALIGN(4)
         INPUT_SECTIONS($LIBRARIES_SML3_CM(sdram_bsz))
         INPUT_SECTIONS($LIBRARIES_SML3_CM(bsz))
      } > MEM_SDRAM_BANK0
      
      sdram_bank2
      {
         INPUT_SECTION_ALIGN(4)
         INPUT_SECTIONS($LIBRARIES_SML3_CM(sdram0))
         
                                                                           
                                                                           
                                                                           
         
         INPUT_SECTIONS($LIBRARIES_SML3_CM(sdram_data_bank2))
         INPUT_SECTIONS($LIBRARIES_SML3_CM(sdram_bank2))
         INPUT_SECTIONS($LIBRARIES_SML3_CM(program))
         INPUT_SECTIONS($LIBRARIES_SML3_CM(noncache_code))
         
                                                                        
                                                                           
                                                                        
         
      } > MEM_SDRAM_BANK2
      
      sdram_bank3
      {
         INPUT_SECTION_ALIGN(4)
         
                                                                          
                                                                           
                                                                          
         
         INPUT_SECTIONS($LIBRARIES_SML3_CM(sdram_data_bank3))
         INPUT_SECTIONS($LIBRARIES_SML3_CM(sdram_bank3))
         INPUT_SECTIONS($LIBRARIES_SML3_CM(data1))
         INPUT_SECTIONS($LIBRARIES_SML3_CM(voldata))
         INPUT_SECTIONS($LIBRARIES_SML3_CM(constdata))
         
                                                                        
                                                                           
                                                                        
         
      } > MEM_SDRAM_BANK3
      
      sdram_bank1
      {
         INPUT_SECTION_ALIGN(4)
         INPUT_SECTIONS($LIBRARIES_SML3_CM(sdram0))
         
                                                                           
                                                                           
                                                                           
         
         INPUT_SECTIONS($LIBRARIES_SML3_CM(sdram_data_bank1))
         INPUT_SECTIONS($LIBRARIES_SML3_CM(sdram_bank1))
         INPUT_SECTIONS($LIBRARIES_SML3_CM(program))
         INPUT_SECTIONS($LIBRARIES_SML3_CM(noncache_code))
         
                                                                        
                                                                           
                                                                        
         
      } > MEM_SDRAM_BANK1
      
      
                                                                   
                                                                        
                                                                   
      
   }               
}                    

PROCESSOR p0
{
   
   MEMORY
   {
      MEM_A_L1_SCRATCH        { TYPE(RAM) START(0xFFB00000) END(0xFFB00FFF) WIDTH(8) }
      MEM_A_L1_CODE_CACHE     { TYPE(RAM) START(0xFFA10000) END(0xFFA13FFF) WIDTH(8) }
      MEM_A_L1_CODE           { TYPE(RAM) START(0xFFA00000) END(0xFFA03FFF) WIDTH(8) }
      MEM_A_L1_DATA_B         { TYPE(RAM) START(0xFF900000) END(0xFF907FFF) WIDTH(8) }
      MEM_A_L1_DATA_A         { TYPE(RAM) START(0xFF800000) END(0xFF807FFF) WIDTH(8) }
      
                                                                  
                                                                        
                                                                  
      
   }             
   
   OUTPUT($COMMAND_LINE_OUTPUT_DIRECTORY/p0.dxe)
   RESOLVE(start, 0xFFA00000)
   KEEP(start,_main)
   
                                                                  
                                                                     
                                                                  
   
   SECTIONS
   {
                                                                                  
      RESERVE(___ssld=0xFEB1FC00, ___lssld = 0x400)
                                                                   
                                                                      
                                                               
                                                                    
                                                      
        
                                                                   
                                                                    
                                                                 
        
      RESERVE(___waba1=MEMORY_END(MEM_A_L1_SCRATCH) - 75, ___la1 = 76)
      RESERVE(___waba2=MEMORY_END(MEM_A_L1_CODE_CACHE) - 75, ___la2 = 76)
      RESERVE(___waba3=MEMORY_END(MEM_A_L1_CODE) - 75, ___la3 = 76)
      RESERVE(___waba5=MEMORY_END(MEM_A_L1_DATA_B) - 75, ___la5 = 76)
      RESERVE(___waba7=MEMORY_END(MEM_A_L1_DATA_A) - 75, ___la7 = 76)
      
                                                                  
                                                                        
                                                                  
      
      scratchpad
      {
         INPUT_SECTION_ALIGN(4)
         
                                                                                 
                                                                           
                                                                                 
         
         INPUT_SECTIONS($OBJECTS_CORE_A(L1_A_scratchpad) $LIBRARIES_CORE_A(L1_A_scratchpad))
      } > MEM_A_L1_SCRATCH
      
      L1_code
      {
         INPUT_SECTION_ALIGN(4)
         __CORE = 0;
         INPUT_SECTIONS($OBJECTS_CORE_A(L1_code) $LIBRARIES_CORE_A(L1_code))
         
                                                                   
                                                                           
                                                                   
         
         INPUT_SECTIONS($OBJECTS_CORE_A(VDK_ISR_code) $LIBRARIES_CORE_A(VDK_ISR_code))
         INPUT_SECTIONS($OBJECTS_CORE_A(cplb) $LIBRARIES_CORE_A(cplb))
         INPUT_SECTIONS($OBJECTS_CORE_A(cplb_code) $LIBRARIES_CORE_A(cplb_code))
         INPUT_SECTIONS($OBJECTS_CORE_A(noncache_code) $LIBRARIES_CORE_A(noncache_code))
         INPUT_SECTIONS($OBJS_LIBS_INTERNAL_CORE_A(program))
         INPUT_SECTIONS($OBJS_LIBS_NOT_EXTERNAL_CORE_A(program))
         INPUT_SECTIONS($OBJECTS_CORE_A(program) $LIBRARIES_CORE_A(program))
         
                                                                  
                                                                           
                                                                  
         
      } > MEM_A_L1_CODE
      
      L1_code_cache
      {
         INPUT_SECTION_ALIGN(4)
         ___l1_code_cache = 0;
         INPUT_SECTION_ALIGN(4)
         INPUT_SECTIONS($OBJECTS_CORE_A(L1_code) $LIBRARIES_CORE_A(L1_code))
         
                                                                         
                                                                           
                                                                         
         
         INPUT_SECTIONS($OBJECTS_CORE_A(VDK_ISR_code) $LIBRARIES_CORE_A(VDK_ISR_code))
         INPUT_SECTIONS($OBJECTS_CORE_A(cplb) $LIBRARIES_CORE_A(cplb))
         INPUT_SECTIONS($OBJECTS_CORE_A(cplb_code) $LIBRARIES_CORE_A(cplb_code))
         INPUT_SECTIONS($OBJS_LIBS_INTERNAL_CORE_A(program))
         INPUT_SECTIONS($OBJS_LIBS_NOT_EXTERNAL_CORE_A(program))
         INPUT_SECTIONS($OBJECTS_CORE_A(program) $LIBRARIES_CORE_A(program))
         
                                                                       
                                                                           
                                                                       
         
      } > MEM_A_L1_CODE_CACHE
      
      L1_data_a_1
      {
         INPUT_SECTION_ALIGN(4)
         ___l1_data_cache_a = 0;
         INPUT_SECTIONS($OBJECTS_CORE_A(L1_data_a) $LIBRARIES_CORE_A(L1_data_a))
         
                                                                     
                                                                           
                                                                     
         
         RESERVE(heaps_and_stack_in_L1_data_a, heaps_and_stack_in_L1_data_a_length = 2048,4)
      } > MEM_A_L1_DATA_A
      
      L1_data_a_bsz ZERO_INIT
      {
         INPUT_SECTION_ALIGN(4)
         INPUT_SECTIONS( $OBJECTS_CORE_A(L1_bsz) $LIBRARIES_CORE_A(L1_bsz))
      } > MEM_A_L1_DATA_A
      
      L1_data_a
      {
         INPUT_SECTION_ALIGN(4)
         INPUT_SECTIONS($OBJECTS_CORE_A{DualCoreMem("CoreA")}(cplb_data) $LIBRARIES_CORE_A{DualCoreMem("CoreA")}(cplb_data))
         INPUT_SECTIONS($OBJECTS_CORE_A(cplb_data) $LIBRARIES_CORE_A(cplb_data))
         INPUT_SECTIONS($OBJECTS_CORE_A(voldata) $LIBRARIES_CORE_A(voldata))
         INPUT_SECTIONS($OBJECTS_CORE_A(constdata) $LIBRARIES_CORE_A(constdata))
         INPUT_SECTIONS($OBJS_LIBS_INTERNAL_CORE_A(data1))
         INPUT_SECTIONS($OBJS_LIBS_NOT_EXTERNAL_CORE_A(data1))
         INPUT_SECTIONS($OBJECTS_CORE_A(data1) $LIBRARIES_CORE_A(data1))
         INPUT_SECTIONS($OBJECTS_CORE_A(.edt) $LIBRARIES_CORE_A(.edt))
         INPUT_SECTIONS($OBJECTS_CORE_A(.cht) $LIBRARIES_CORE_A(.cht))
         
                                                                   
                                                                           
                                                                   
         
      } > MEM_A_L1_DATA_A
      
      bsz_L1_data_a ZERO_INIT
      {
         INPUT_SECTION_ALIGN(4)
         INPUT_SECTIONS($OBJECTS_CORE_A(bsz) $LIBRARIES_CORE_A(bsz))
      } > MEM_A_L1_DATA_A
      
      L1_data_a_stack_heap
      {
         INPUT_SECTION_ALIGN(4)
         RESERVE_EXPAND(heaps_and_stack_in_L1_data_a, heaps_and_stack_in_L1_data_a_length , 0, 4)
         ldf_heap_space = heaps_and_stack_in_L1_data_a;
         ldf_heap_end = (ldf_heap_space + (heaps_and_stack_in_L1_data_a_length - 4)) & 0xfffffffc;
         ldf_heap_length = ldf_heap_end - ldf_heap_space;
      } > MEM_A_L1_DATA_A
      
      L1_data_b_bsz ZERO_INIT
      {
         INPUT_SECTION_ALIGN(4)
         INPUT_SECTIONS( $OBJECTS_CORE_A(L1_bsz) $LIBRARIES_CORE_A(L1_bsz))
      } > MEM_A_L1_DATA_B
      
      L1_data_b_tables
      {
         INPUT_SECTION_ALIGN(4)
         FORCE_CONTIGUITY
         INPUT_SECTIONS($OBJECTS_CORE_A(ctor) $LIBRARIES_CORE_A(ctor))
         INPUT_SECTIONS($LIBRARIES_SML2_CM(ctor) $LIBRARIES_SML3_CM(ctor))
         INPUT_SECTIONS($OBJECTS_CORE_A(ctorl) $LIBRARIES_CORE_A(ctorl))
         INPUT_SECTIONS($OBJECTS_CORE_A(vtbl) $LIBRARIES_CORE_A(vtbl))
         INPUT_SECTIONS($OBJECTS_CORE_A(.frt) $LIBRARIES_CORE_A(.frt))
         INPUT_SECTIONS($OBJECTS_CORE_A(.rtti) $LIBRARIES_CORE_A(.rtti))
         INPUT_SECTIONS($OBJECTS_CORE_A(.edt) $LIBRARIES_CORE_A(.edt))
         INPUT_SECTIONS($OBJECTS_CORE_A(.cht) $LIBRARIES_CORE_A(.cht))
      } > MEM_A_L1_DATA_B
      
      L1_data_b
      {
         INPUT_SECTION_ALIGN(4)
         ___l1_data_cache_b = 0;
         INPUT_SECTIONS($OBJECTS_CORE_A(L1_data_b) $LIBRARIES_CORE_A(L1_data_b))
         
                                                                     
                                                                           
                                                                     
         
         RESERVE(heaps_and_stack_in_L1_data_b, heaps_and_stack_in_L1_data_b_length = 2048,4)
         INPUT_SECTIONS($OBJS_LIBS_INTERNAL_CORE_A(data1))
         INPUT_SECTIONS($OBJS_LIBS_NOT_EXTERNAL_CORE_A(data1))
         INPUT_SECTIONS($OBJECTS_CORE_A(data1) $LIBRARIES_CORE_A(data1))
         INPUT_SECTIONS($OBJECTS_CORE_A{DualCoreMem("CoreA")}(cplb_data) $LIBRARIES_CORE_A{DualCoreMem("CoreA")}(cplb_data))
         INPUT_SECTIONS($OBJECTS_CORE_A(cplb_data) $LIBRARIES_CORE_A(cplb_data))
         INPUT_SECTIONS($OBJECTS_CORE_A(voldata) $LIBRARIES_CORE_A(voldata))
         INPUT_SECTIONS($OBJECTS_CORE_A(constdata) $LIBRARIES_CORE_A(constdata))
         
                                                                   
                                                                           
                                                                   
         
      } > MEM_A_L1_DATA_B
      
      bsz_L1_data_b ZERO_INIT
      {
         INPUT_SECTION_ALIGN(4)
         INPUT_SECTIONS($OBJS_LIBS_INTERNAL_CORE_A(bsz))
         INPUT_SECTIONS($OBJS_LIBS_NOT_EXTERNAL_CORE_A(bsz))
         INPUT_SECTIONS($OBJECTS_CORE_A(bsz) $LIBRARIES_CORE_A(bsz))
      } > MEM_A_L1_DATA_B
      
      p0_gdt
      {
         FORCE_CONTIGUITY
         INPUT_SECTION_ALIGN(4)
         INPUT_SECTIONS($OBJECTS_CORE_A(.gdt) $LIBRARIES_CORE_A(.gdt))
         INPUT_SECTIONS($LIBRARIES_SML3_CM(.gdt))
         INPUT_SECTIONS($LIBRARIES_SML2_CM(.gdt))
         INPUT_SECTIONS($OBJECTS_CORE_A(.gdtl) $LIBRARIES_CORE_A(.gdtl))
         INPUT_SECTIONS($LIBRARIES_SML3_CM(.gdtl))
         INPUT_SECTIONS($LIBRARIES_SML2_CM(.gdtl))
      } > MEM_A_L1_DATA_B
      
      L1_data_b_stack_heap
      {
         INPUT_SECTION_ALIGN(4)
         RESERVE_EXPAND(heaps_and_stack_in_L1_data_b, heaps_and_stack_in_L1_data_b_length , 0, 4)
         ldf_stack_space = heaps_and_stack_in_L1_data_b;
         ldf_stack_end = (ldf_stack_space + (heaps_and_stack_in_L1_data_b_length - 4)) & 0xfffffffc;
      } > MEM_A_L1_DATA_B
      
      
                                                                  
                                                                        
                                                                  
      
   }               
}         

PROCESSOR p1
{
   
   MEMORY
   {
      MEM_B_L1_SCRATCH        { TYPE(RAM) START(0xFF700000) END(0xFF700FFF) WIDTH(8) }
      MEM_B_L1_CODE_CACHE     { TYPE(RAM) START(0xFF610000) END(0xFF613FFF) WIDTH(8) }
      MEM_B_L1_CODE           { TYPE(RAM) START(0xFF600000) END(0xFF603FFF) WIDTH(8) }
      MEM_B_L1_DATA_B         { TYPE(RAM) START(0xFF500000) END(0xFF507FFF) WIDTH(8) }
      MEM_B_L1_DATA_A         { TYPE(RAM) START(0xFF400000) END(0xFF407FFF) WIDTH(8) }
      
                                                                  
                                                                        
                                                                  
      
   }             
   
   OUTPUT($COMMAND_LINE_OUTPUT_DIRECTORY/p1.dxe)
   RESOLVE(start, 0xFF600000)
   KEEP(start,_main)
   
                                                                  
                                                                     
                                                                  
   
   SECTIONS
   {
                                                                   
                                                                      
                                                               
                                                                    
                                                      
        
                                                                   
                                                                    
                                                                 
        
      RESERVE(___wabb1=MEMORY_END(MEM_B_L1_SCRATCH) - 75, ___lb1 = 76)
      RESERVE(___wabb2=MEMORY_END(MEM_B_L1_CODE_CACHE) - 75, ___l2 = 76)
      RESERVE(___wabb3=MEMORY_END(MEM_B_L1_CODE) - 75, ___l3 = 76)
      RESERVE(___wabb5=MEMORY_END(MEM_B_L1_DATA_B) - 75, ___l5 = 76)
      RESERVE(___wabb7=MEMORY_END(MEM_B_L1_DATA_A) - 75, ___l7 = 76)
      
                                                                  
                                                                        
                                                                  
      
      scratchpad
      {
         INPUT_SECTION_ALIGN(4)
         
                                                                                 
                                                                           
                                                                                 
         
         INPUT_SECTIONS($OBJECTS_CORE_B(L1_B_scratchpad) $LIBRARIES_CORE_B(L1_B_scratchpad))
      } > MEM_B_L1_SCRATCH
      
      L1_code
      {
         INPUT_SECTION_ALIGN(4)
         __CORE = 1;
         INPUT_SECTIONS($OBJECTS_CORE_B(L1_code) $LIBRARIES_CORE_B(L1_code))
         
                                                                         
                                                                           
                                                                         
         
         INPUT_SECTIONS($OBJECTS_CORE_B(VDK_ISR_code) $LIBRARIES_CORE_B(VDK_ISR_code))
         INPUT_SECTIONS($OBJECTS_CORE_B(cplb) $LIBRARIES_CORE_B(cplb))
         INPUT_SECTIONS($OBJECTS_CORE_B(cplb_code) $LIBRARIES_CORE_B(cplb_code))
         INPUT_SECTIONS($OBJECTS_CORE_B(noncache_code) $LIBRARIES_CORE_B(noncache_code))
         INPUT_SECTIONS($OBJECTS_CORE_B(program) $LIBRARIES_CORE_B(program))
         
                                                                       
                                                                           
                                                                       
         
      } > MEM_B_L1_CODE
      
      L1_code_cache
      {
         INPUT_SECTION_ALIGN(4)
         ___l1_code_cache = 0;
         INPUT_SECTION_ALIGN(4)
         INPUT_SECTIONS($OBJECTS_CORE_B(L1_code) $LIBRARIES_CORE_B(L1_code))
         
                                                                               
                                                                           
                                                                               
         
         INPUT_SECTIONS($OBJECTS_CORE_B(VDK_ISR_code) $LIBRARIES_CORE_B(VDK_ISR_code))
         INPUT_SECTIONS($OBJECTS_CORE_B(cplb_code) $LIBRARIES_CORE_B(cplb_code))
         INPUT_SECTIONS($OBJECTS_CORE_B(cplb) $LIBRARIES_CORE_B(cplb))
         INPUT_SECTIONS($OBJS_LIBS_INTERNAL_CORE_B(program))
         INPUT_SECTIONS($OBJS_LIBS_NOT_EXTERNAL_CORE_B(program))
         INPUT_SECTIONS($OBJECTS_CORE_B(program) $LIBRARIES_CORE_B(program))
         
                                                                             
                                                                           
                                                                             
         
      } > MEM_B_L1_CODE_CACHE
      
      L1_data_a_1
      {
         INPUT_SECTION_ALIGN(4)
         ___l1_data_cache_a = 0;
         INPUT_SECTIONS($OBJECTS_CORE_B(L1_data_a) $LIBRARIES_CORE_B(L1_data_a))
         
                                                                           
                                                                           
                                                                           
         
         RESERVE(heaps_and_stack_in_L1_data_a, heaps_and_stack_in_L1_data_a_length = 2048,4)
      } > MEM_B_L1_DATA_A
      
      L1_data_a_bsz ZERO_INIT
      {
         INPUT_SECTION_ALIGN(4)
         INPUT_SECTIONS( $OBJECTS_CORE_B(L1_bsz) $LIBRARIES_CORE_B(L1_bsz))
      } > MEM_B_L1_DATA_A
      
      L1_data_a
      {
         INPUT_SECTION_ALIGN(4)
         INPUT_SECTIONS($OBJECTS_CORE_B{DualCoreMem("CoreB")}(cplb_data) $LIBRARIES_CORE_B{DualCoreMem("CoreB")}(cplb_data))
         INPUT_SECTIONS($OBJECTS_CORE_B(cplb_data) $LIBRARIES_CORE_B(cplb_data))
         INPUT_SECTIONS($OBJECTS_CORE_B(voldata) $LIBRARIES_CORE_B(voldata))
         INPUT_SECTIONS($OBJECTS_CORE_B(constdata) $LIBRARIES_CORE_B(constdata))
         INPUT_SECTIONS($OBJS_LIBS_INTERNAL_CORE_B(data1))
         INPUT_SECTIONS($OBJS_LIBS_NOT_EXTERNAL_CORE_B(data1))
         INPUT_SECTIONS($OBJECTS_CORE_B(data1) $LIBRARIES_CORE_B(data1))
         INPUT_SECTIONS($OBJECTS_CORE_B(.edt) $LIBRARIES_CORE_B(.edt))
         INPUT_SECTIONS($OBJECTS_CORE_B(.cht) $LIBRARIES_CORE_B(.cht))
         
                                                                         
                                                                           
                                                                         
         
      } > MEM_B_L1_DATA_A
      
      bsz_L1_data_a ZERO_INIT
      {
         INPUT_SECTION_ALIGN(4)
         INPUT_SECTIONS($OBJS_LIBS_INTERNAL_CORE_B(bsz))
         INPUT_SECTIONS($OBJS_LIBS_NOT_EXTERNAL_CORE_B(bsz))
         INPUT_SECTIONS($OBJECTS_CORE_B(bsz) $LIBRARIES_CORE_B(bsz))
      } > MEM_B_L1_DATA_A
      
      L1_data_a_stack_heap
      {
         INPUT_SECTION_ALIGN(4)
         RESERVE_EXPAND(heaps_and_stack_in_L1_data_a, heaps_and_stack_in_L1_data_a_length , 0, 4)
         ldf_heap_space = heaps_and_stack_in_L1_data_a;
         ldf_heap_end = (ldf_heap_space + (heaps_and_stack_in_L1_data_a_length - 4)) & 0xfffffffc;
         ldf_heap_length = ldf_heap_end - ldf_heap_space;
      } > MEM_B_L1_DATA_A
      
      L1_data_b_bsz ZERO_INIT
      {
         INPUT_SECTION_ALIGN(4)
         INPUT_SECTIONS( $OBJECTS_CORE_B(L1_bsz) $LIBRARIES_CORE_B(L1_bsz))
      } > MEM_B_L1_DATA_B
      
      L1_data_b_tables
      {
         INPUT_SECTION_ALIGN(4)
         FORCE_CONTIGUITY
         INPUT_SECTIONS($OBJECTS_CORE_B(ctor) $LIBRARIES_CORE_B(ctor))
         INPUT_SECTIONS($OBJECTS_CORE_B(ctorl) $LIBRARIES_CORE_B(ctorl))
         INPUT_SECTIONS($OBJECTS_CORE_B(vtbl) $LIBRARIES_CORE_B(vtbl))
         INPUT_SECTIONS($OBJECTS_CORE_B(.frt) $LIBRARIES_CORE_B(.frt))
         INPUT_SECTIONS($OBJECTS_CORE_B(.rtti) $LIBRARIES_CORE_B(.rtti))
         INPUT_SECTIONS($OBJECTS_CORE_B(.edt) $LIBRARIES_CORE_B(.edt))
         INPUT_SECTIONS($OBJECTS_CORE_B(.cht) $LIBRARIES_CORE_B(.cht))
      } > MEM_B_L1_DATA_B
      
      L1_data_b
      {
         INPUT_SECTION_ALIGN(4)
         ___l1_data_cache_b = 0;
         INPUT_SECTIONS($OBJECTS_CORE_B(L1_data_b) $LIBRARIES_CORE_B(L1_data_b))
         
                                                                           
                                                                           
                                                                           
         
         RESERVE(heaps_and_stack_in_L1_data_b, heaps_and_stack_in_L1_data_b_length = 2048,4)
         INPUT_SECTIONS($OBJS_LIBS_INTERNAL_CORE_B(data1))
         INPUT_SECTIONS($OBJS_LIBS_NOT_EXTERNAL_CORE_B(data1))
         INPUT_SECTIONS($OBJECTS_CORE_B(data1) $LIBRARIES_CORE_B(data1))
         INPUT_SECTIONS($OBJECTS_CORE_B{DualCoreMem("CoreB")}(cplb_data) $LIBRARIES_CORE_B{DualCoreMem("CoreB")}(cplb_data))
         INPUT_SECTIONS($OBJECTS_CORE_B(cplb_data) $LIBRARIES_CORE_B(cplb_data))
         INPUT_SECTIONS($OBJECTS_CORE_B(voldata) $LIBRARIES_CORE_B(voldata))
         INPUT_SECTIONS($OBJECTS_CORE_B(constdata) $LIBRARIES_CORE_B(constdata))
         
                                                                         
                                                                           
                                                                         
         
      } > MEM_B_L1_DATA_B
      
      bsz_L1_data_b ZERO_INIT
      {
         INPUT_SECTION_ALIGN(4)
         INPUT_SECTIONS($OBJS_LIBS_INTERNAL_CORE_B(bsz))
         INPUT_SECTIONS($OBJS_LIBS_NOT_EXTERNAL_CORE_B(bsz))
         INPUT_SECTIONS($OBJECTS_CORE_B(bsz) $LIBRARIES_CORE_B(bsz))
      } > MEM_B_L1_DATA_B
      
      p1_gdt
      {
         FORCE_CONTIGUITY
         INPUT_SECTION_ALIGN(4)
         INPUT_SECTIONS($OBJECTS_CORE_B(.gdt) $LIBRARIES_CORE_B(.gdt))
         INPUT_SECTIONS($LIBRARIES_SML3_CM(.gdt))
         INPUT_SECTIONS($LIBRARIES_SML2_CM(.gdt))
         INPUT_SECTIONS($OBJECTS_CORE_B(.gdtl) $LIBRARIES_CORE_B(.gdtl))
         INPUT_SECTIONS($LIBRARIES_SML3_CM(.gdtl))
         INPUT_SECTIONS($LIBRARIES_SML2_CM(.gdtl))
      } > MEM_B_L1_DATA_B
      
      L1_data_b_stack_heap
      {
         INPUT_SECTION_ALIGN(4)
         RESERVE_EXPAND(heaps_and_stack_in_L1_data_b, heaps_and_stack_in_L1_data_b_length , 0, 4)
         ldf_stack_space = heaps_and_stack_in_L1_data_b;
         ldf_stack_end = (ldf_stack_space + (heaps_and_stack_in_L1_data_b_length - 4)) & 0xfffffffc;
      } > MEM_B_L1_DATA_B
      
      
                                                                  
                                                                        
                                                                  
      
   }               
}         

